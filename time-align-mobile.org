#+TODO: TODO DOSUB | DONE CANCELED 
#+PROPERTY: Confidence_ALL 0 10 25 50 75 90 100
#+PROPERTY: Effort_ALL 0 0:10 0:30 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 15:00 20:00 25:00 30:00 35:00 40:00
#+PROPERTY: Work_ALL 0 1 2 3 5 8 13 20 50 100
#+PROPERTY: Value_ALL 0 1 2 3 5 8 13 20 50 100
# Time Estimation column view
#+COLUMNS: %40ITEM(Task) %10Confidence(Confidence){mean} %17Effort(Estimated Effort){:} %CLOCKSUM
# WSJF column view for editing
# #+COLUMNS: %Value(Value)  %Work(Work) %ITEM(Task) %TODO(State) 
#+STARTUP: overview

* DOSUB Time Align Mobile
  :LOGBOOK:
  CLOCK: [2019-11-12 Tue 20:55]--[2019-11-12 Tue 21:08] =>  0:13
  CLOCK: [2019-11-12 Tue 19:30]--[2019-11-12 Tue 20:49] =>  1:19
  CLOCK: [2019-09-29 Sun 17:17]--[2019-09-29 Sun 17:24] =>  0:07
  CLOCK: [2019-09-29 Sun 15:52]--[2019-09-29 Sun 15:55] =>  0:03
  CLOCK: [2019-09-15 Sun 11:20]--[2019-09-15 Sun 11:29] =>  0:09
  CLOCK: [2019-09-06 Fri 22:29]--[2019-09-06 Fri 22:36] =>  0:07
  CLOCK: [2019-08-11 Sun 19:08]--[2019-08-11 Sun 19:17] =>  0:09
  CLOCK: [2019-08-10 Sat 12:51]--[2019-08-10 Sat 13:11] =>  0:20
  CLOCK: [2019-07-20 Sat 21:52]--[2019-07-20 Sat 22:10] =>  0:18
  CLOCK: [2019-07-20 Sat 18:55]--[2019-07-20 Sat 18:56] =>  0:01
  CLOCK: [2019-07-13 Sat 18:20]--[2019-07-13 Sat 18:42] =>  0:22
  CLOCK: [2019-06-29 Sat 18:06]--[2019-06-29 Sat 18:10] =>  0:04
  CLOCK: [2019-06-17 Mon 17:42]--[2019-06-17 Mon 18:14] =>  0:32
  CLOCK: [2019-05-09 Thu 20:30]--[2019-05-09 Thu 20:55] =>  0:25
  CLOCK: [2018-09-21 Fri 07:39]--[2018-09-21 Fri 07:40] =>  0:01
  CLOCK: [2018-08-29 Wed 14:41]--[2018-08-29 Wed 14:46] =>  0:05
  CLOCK: [2018-08-19 Sun 16:05]--[2018-08-19 Sun 16:09] =>  0:04
  CLOCK: [2018-08-19 Sun 15:56]--[2018-08-19 Sun 16:05] =>  0:09
  CLOCK: [2018-08-18 Sat 15:07]--[2018-08-18 Sat 15:11] =>  0:04
  CLOCK: [2018-07-17 Tue 18:58]--[2018-07-17 Tue 19:17] =>  0:19
  :END:
     #+NAME: WSJF table
     #+BEGIN: propview :conds ((string= TODO "TODO")) :cols ((concat "[[" ITEM "]]") (/ (float VALUE) (float WORK)) VALUE WORK )
     #+END:
** Instructions on WSJF table usage 
     This table uses a condition to filter the parent and children headings into a table displaying *VALUE* and *WORK* properties.
     The *(/ (float VALUE) (float WORK))* column is derived from those two properties. 
     ~C-c C-c~ on the table definition line to re-render.
     Sort by putting cursor on one of the lines and running ~org-table-sort-lines~ with *N* option.
     To rapidly enter *VALUE* and *WORK* properties use ~org-columns~ to enter column view.
     Then use arrow keys to navigate cells in column view. 
     Use ~SHIFT ->~ to cycle through property values.
** DOSUB Release to strangers
     #+BEGIN: propview :conds ((string= TODO "TODO")) :cols ((concat "[[" ITEM "]]") (/ (float VALUE) (float WORK)) VALUE WORK )
     | (concat "[[" ITEM "]]")                                                  | (/ (float VALUE) (float WORK)) | VALUE | WORK |
     |----------------------------------------------------------------------+--------------------------------+-------+------|
     | "[[Use scrollTo]]"                                                       |                            6.5 |    13 |    2 |
     | "[[Follow material design on each page without changing functionality]]" |                            5.0 |   100 |   20 |
     | "[[App notification on planned period starting]]"                        |                            4.0 |    20 |    5 |
     | "[[Put version indicator in app-db (for export mostly)]]"                |                            1.0 |     1 |    1 |
     |----------------------------------------------------------------------+--------------------------------+-------+------|
     |                                                                      |                                |       |      |
     #+END:
*** TODO App notification on planned period starting 
    :PROPERTIES:
    :VALUE:    20
    :WORK:     5
    :EFFORT:   4:00
    :CONFIDENCE: 50
    :END:
    :LOGBOOK:
    CLOCK: [2019-11-12 Tue 19:27]--[2019-11-12 Tue 19:28] =>  0:01
    CLOCK: [2019-11-11 Mon 18:59]--[2019-11-11 Mon 18:59] =>  0:00
    CLOCK: [2019-11-11 Mon 18:10]--[2019-11-11 Mon 18:59] =>  0:49
    :END:
*** TODO Use scrollTo 
    :PROPERTIES:
    :VALUE:    13
    :WORK:     2
    :CONFIDENCE: 50
    :EFFORT:   1:00
    :END:
    :LOGBOOK:
    CLOCK: [2019-11-23 Sat 10:42]
    CLOCK: [2019-11-23 Sat 09:39]--[2019-11-23 Sat 09:48] =>  0:09
    CLOCK: [2019-11-23 Sat 09:17]--[2019-11-23 Sat 09:17] =>  0:00
    CLOCK: [2019-11-23 Sat 08:51]--[2019-11-23 Sat 09:17] =>  0:26
    :END:
    [[https://facebook.github.io/react-native/docs/scrollview.html#scrollto][scrollTo]]
    https://stackoverflow.com/a/54310445/5040125 (onLayout prop to get around other animations blocking scrollTo)
    - [X] Scrolls to an element when it is selected for edit
    - [ ] Scrolls when selecting an element using options from period-form
    - [X] Scrolls to now on day re-render
    - [ ] Scroll to now button in top bar menu
*** TODO Put version indicator in app-db (for export mostly)
    :PROPERTIES:
    :VALUE:    1
    :WORK:     1
    :CONFIDENCE: 90
    :EFFORT:   0:30
    :END:
*** TODO Follow material design on each page without changing functionality
    :PROPERTIES:
    :WORK:     20
    :VALUE:    100
    :CONFIDENCE: 25
    :EFFORT:   10:00
    :END:
    :LOGBOOK:
    CLOCK: [2019-11-13 Wed 20:56]--[2019-11-13 Wed 21:04] =>  0:08
    :END:
**** Bucket list 
     +Between white, black, and lightened/darkened version of a color, there be a satisfying option for a [[https://www.npmjs.com/package/color#luminosity][contrast]] of 4.5 (WCAG minimum for readability).+
     +The list page could be a two line list with background a text color related to the bucket color. No icon on the left but a vertical three dot menu on the right.+
     Simple two line list with a vertical three dot menu on the right and a =google-circles-communities= icon that is colored by the bucket color.
** DOSUB Eventually 
*** CANCELED Add appium tests
    CLOSED: [2019-11-23 Sat 11:09]
*** CANCELED Add handler tests
    CLOSED: [2019-11-23 Sat 11:09]
    :PROPERTIES:
    :WORK:     5
    :VALUE:    13
    :END:
    :LOGBOOK:
    CLOCK: [2019-10-20 Sun 19:05]--[2019-10-20 Sun 19:15] =>  0:10
    CLOCK: [2019-10-19 Sat 18:13]--[2019-10-19 Sat 19:22] =>  1:09
    CLOCK: [2019-10-09 Wed 18:44]--[2019-10-09 Wed 19:10] =>  0:26
    CLOCK: [2019-10-08 Tue 18:45]--[2019-10-08 Tue 18:50] =>  0:05
    CLOCK: [2019-10-08 Tue 18:23]--[2019-10-08 Tue 18:45] =>  0:22
    CLOCK: [2019-10-07 Mon 19:10]--[2019-10-07 Mon 19:12] =>  0:02
    CLOCK: [2019-10-07 Mon 19:04]--[2019-10-07 Mon 19:10] =>  0:06
    CLOCK: [2019-10-06 Sun 16:43]--[2019-10-06 Sun 17:17] =>  0:34
    CLOCK: [2019-10-06 Sun 15:47]--[2019-10-06 Sun 16:39] =>  0:52
    CLOCK: [2019-10-05 Sat 18:12]--[2019-10-05 Sat 18:17] =>  0:05
    CLOCK: [2019-10-05 Sat 16:13]--[2019-10-05 Sat 16:57] =>  0:44
    CLOCK: [2019-10-05 Sat 15:01]--[2019-10-05 Sat 15:07] =>  0:06
    CLOCK: [2019-10-05 Sat 14:45]--[2019-10-05 Sat 14:59] =>  0:14
    CLOCK: [2019-10-05 Sat 14:16]--[2019-10-05 Sat 14:45] =>  0:29
    CLOCK: [2019-10-05 Sat 13:36]--[2019-10-05 Sat 14:16] =>  0:40
    CLOCK: [2019-10-05 Sat 11:06]--[2019-10-05 Sat 11:24] =>  0:18
    CLOCK: [2019-10-05 Sat 10:50]--[2019-10-05 Sat 11:00] =>  0:10
    CLOCK: [2019-10-04 Fri 15:05]--[2019-10-04 Fri 15:12] =>  0:07
    CLOCK: [2019-10-04 Fri 12:14]--[2019-10-04 Fri 12:25] =>  0:11
    CLOCK: [2019-10-03 Thu 18:26]--[2019-10-03 Thu 19:08] =>  0:42
    CLOCK: [2019-10-03 Thu 13:28]--[2019-10-03 Thu 13:54] =>  0:26
    CLOCK: [2019-10-03 Thu 09:10]--[2019-10-03 Thu 09:50] =>  0:40
    CLOCK: [2019-10-02 Wed 21:05]--[2019-10-02 Wed 21:55] =>  0:50
    CLOCK: [2019-10-02 Wed 20:33]--[2019-10-02 Wed 21:05] =>  0:32
    CLOCK: [2019-10-02 Wed 12:00]--[2019-10-02 Wed 12:23] =>  0:23
    CLOCK: [2019-10-01 Tue 18:51]--[2019-10-01 Tue 19:00] =>  0:09
    CLOCK: [2019-10-01 Tue 18:19]--[2019-10-01 Tue 18:44] =>  0:25
    :END:
    - [X] +Tests can run easilyj+
      - Desired method https://shadow-cljs.github.io/docs/UsersGuide.html#target-node-test
      - Could not actually do this without major refactor to remove any react native libraries from dependency tree
    - [X] Tests can be run on command
    - [X] An interceptor generates tests from app usage
    - [X] +Generated tests diff against app-db default+
      - This was causing some sorting issue
      - Reverted it
    - [ ] Tests exist for all handler functions
      - At this rate (1/4 min) it is going to take 3 hrs to finish adding these tests
      - Speed up the rate
        - [X] Add the interceptor to all remaining handlers
          - Got to use ~@:~ to really speed things up
        - Run through the app in one go attempting to trigger all the handlers
          - They trigger too many times
            - [X] Add some logic to only print the test once
        - Copy past everything into the handlers_test ns
        - Then run and fix and errors
    - [X] Recommended approach to [[https://github.com/thheller/reagent-expo/pull/6][use jest]] considered against initial ideas
      - Isolating the functions to be able to run on node is hard
      - jest runs out of memory every time I run with ~watch~ or ~compile~ compiled code
      - Chose jest anyway
    - [X] Expo is upgraded to rule out any version issues as a problem
**** Ask about import issue on slack 
     I tagged thheller directly.
     #+begin_src markdown
I'm trying to set up some node tests for my react-native project.
*shadow-cljs.edn*
```
...

 :builds
 {:app
  {:target     :react-native
   :init-fn    time-align-mobile.app/init
   :output-dir "app"
   :devtools   {:autoload true}}

  :test
  {:target    :node-test
   :output-to "out/node-tests.js"
   :autorun   true}}}

```
*test file*
```
(ns time-align-mobile.handlers-test
  (:require [cljs.test :as t :refer-macros [deftest is]]
            [time-align-mobile.handlers :as handlers]
            [time-align-mobile.db :as db :refer [app-db]]))

(deftest initialize-db
  (is (= app-db (handlers/initialize-db [] []))))

...
```
The tests are on pure clojure functions that I use in re-frame handlers. No react-native specific things in them.
But when I try to run the tests I get
```
>> node out/node-tests.js

SHADOW import error /home/justin/projects/time-align-mobile/.shadow-cljs/builds/test/dev/out/cljs-runtime/shadow.js.shim.module$react_native.js
/home/justin/projects/time-align-mobile/node_modules/react-native/Libraries/Utilities/warnOnce.js:15
const warnedKeys: {[string]: boolean} = {};
      ^^^^^^^^^^

SyntaxError: Missing initializer in const declaration
    at Module._compile (internal/modules/cjs/loader.js:721:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
    at Function.Module._load (internal/modules/cjs/loader.js:585:3)
    at Module.require (internal/modules/cjs/loader.js:690:17)
    at require (internal/modules/cjs/helpers.js:25:18)
    at Object.<anonymous> (/home/justin/projects/time-align-mobile/node_modules/react-native/Libraries/react-native/react-native-implementation.js:14:18)
    at Module._compile (internal/modules/cjs/loader.js:776:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)

```
Am I doing something dumb or is there something wrong with how shadow is including other project dependencies?
     #+end_src
**** Why is there a heap problem?
     Had to run ~shadow-cljs release test~ and then ~yarn jest~ to get an error message that lead me to.
     The problem.
     The line below, in the db namespace, is a focal point. It calls all the screens which loads a component which has a side effect of dispatching the tick function.
      #+begin_src clojure

        (def screen-id-set (set (->> nav/screens-map
                                     (map (fn [{:keys [id]}] id)))))
      #+end_src
     So removing the problematic line fixes the problem when I do a release and then run jest.
     There is still a heap issue when I run ~sahdow-cljs watch test~ and ~yarn jest~ in another terminal.
     ~export NODE_OPTIONS="--max-old-space-size=2048"~
     Repeatedly demonstrated to myself that the heap error only happens when including a namespace from my code and compiling with watch.
     Messaged thheller on slack.
*** TODO Add presribed handler tests 
    :PROPERTIES:
    :WORK:     5
    :VALUE:    13
    :END:

    https://github.com/day8/re-frame/blob/master/docs/Testing.md
*** TODO Add subscription tests
    :PROPERTIES:
    :WORK:     5
    :VALUE:    13
    :END:
    https://github.com/day8/re-frame/blob/master/docs/Testing.md
*** TODO Multiple play timers
    :PROPERTIES:
    :VALUE:    8
    :WORK:     5
    :END:
   Stacked play indicators in bottom sheet.
   +Top+ Bottom is the selected edit with either a play or stop indicator with color. 
   Each level below that is a stop bottom for each playing item.
   Dynamic snap to points based on how many items in play.
   FAB does not have stop indicator anymore.
   Deslection by "closing" bottom sheet while still being able to see in play stop buttons.
   Can header and dynamic snap positions be used to achieve this? 
*** TODO Add selected start stop indicators (now indicator style)
    :PROPERTIES:
    :VALUE:    5
    :WORK:     2
    :END:
*** TODO Add geofencing triggers on buckets 
*** TODO Add Calendar integration
    :PROPERTIES:
    :Effort:   10:00
    :Confidence: 60
    :END:
    :LOGBOOK:
    CLOCK: [2019-09-17 Tue 18:34]--[2019-09-17 Tue 18:39] =>  0:05
    :END:
https://docs.expo.io/versions/latest/sdk/calendar/
- [ ] Sync button to pull in calendars from system
- [ ] Calendar list
- [ ] Add import to bucket option
- [ ] Enabled option on each calendar item
- [ ] Auto add options under each enabled item
  - [ ] Planned
  - [ ] Actual
- [ ] Calendar reference to templates
- [ ] Calendar reference to periods
- [ ] Calendars enabled and auto add options to each Bucket
- [ ] Form components to link periods to calendar events
- [ ] Form components to link templates to calendar events
*** TODO Add locked period mechanism
    :PROPERTIES:
    :Effort:   8:00
    :Confidence: 65
    :END:
When using the transform arrows to move things around the other periods (in the day?) should get pushed unless locked.
Have a lock / unlock all button.
*** TODO Mobile friendly data editor
    :PROPERTIES:
    :Effort:   8:00
    :Confidence: 75
    :END:
    :LOGBOOK:
    CLOCK: [2019-08-08 Thu 21:25]--[2019-08-08 Thu 22:56] =>  1:31
    CLOCK: [2019-08-08 Thu 19:42]--[2019-08-08 Thu 20:42] =>  1:00
    :END:
https://gist.github.com/jgoodhcg/ed3cb0b51f117553e2b04ca62946b68d
*** TODO Checklists
    :PROPERTIES:
    :Effort:   6:00
    :Confidence: 65
    :END:
- [ ] Add basic data to spec template
- [ ] Add basic data to spec period
- [ ] Create components for forms
  - [ ] Period
  - [ ] Period compact (modal?)
  - [ ] Template
  - [ ] Template compact (modal?)
  - [ ] Create complete state indicator
*** TODO Notifications (push?)
    :PROPERTIES:
    :Effort:   4:00
    :Confidence: 80
    :END:
    :LOGBOOK:
    CLOCK: [2019-07-27 Sat 17:01]--[2019-07-27 Sat 17:54] =>  0:53
    :END:
- [[https://docs.expo.io/versions/latest/sdk/notifications/#notificationsschedulelocalnotificationasynclocalnotification-schedulingoptions][Schedule local notifications]]
- [[https://docs.expo.io/versions/latest/sdk/notifications/#subscribing-to-notifications][Listen for notifications]]
- [X] Test a local notification
- [ ] Schedule a notification side effect on planned period creation
  - [ ] Add period handler
  - [ ] Apply pattern handler
- [ ] Register a listener to navigate to day
*** TODO Fix template editing bug with end time
    :PROPERTIES:
    :Confidence: 65
    :Effort:   2:00
    :END:
Using the arrows to have the start go to the day before or end to day after seems to work fine.
Check that it works past 24+ hours.
Using the button to set the time into yesterday or tomorrow doesn't work. (needs to be relative...)
*** TODO Fix navigation
    :PROPERTIES:
    :Effort:   5:00
    :Confidence: 50
    :END:
- [ ] Move history to app-db
- [ ] Limit to X items
- [ ] Back should pop off history
- [ ] Delete actions should nav-back
*** TODO Markov chain prediction
    :PROPERTIES:
    :Effort:   16:00
    :Confidence: 30
    :END:
*** TODO Report Page
    :PROPERTIES:
    :Effort:   40:00
    :Confidence: 25
    :END:
*** TODO Queue page
    :PROPERTIES:
    :Effort:   10:00
    :Confidence: 50
    :END:
**** TODO Add queue definition to app-db
- [ ] queue definition
  - Include priority?
- [ ] ~:queue~ key under ~:bucket~
**** TODO Add queue form
**** TODO Add queue list
**** TODO Add conversion to planned period function
*** TODO Calendar Page
    :PROPERTIES:
    :Effort:   30:00
    :Confidence: 50
    :END:
*** TODO Analytics
    :PROPERTIES:
    :Effort:   4:00
    :Confidence: 25
    :END:
- Need to keep track of user activity
- Also need to keep track of user state for bug reports
- Also need error reporting
*** TODO Bugs
- Going back from template form doesn't close the bottom sheet
- Closing the bottom sheet doesn't deselect

** Dreams
- Data includes periods/templates/pattern generated from for reports of usage
- Meta data (with mobile friendly editor) on all entities
- [[https://practicalli.github.io/spacemacs/improving-code/linting/][Linting]]
- Fully namespaced keys only
- DRY up /all/ spectre paths
- Spec everything
- Unit test every function (or handlers, subs, helpers)
- Accessibility
- Energy meter
- Advanced notifications with interaction
- [[https://stackoverflow.com/questions/46680890/react-native-how-to-scroll-a-scrollview-to-a-given-location-after-navigation-f][better scrolling]]
- [[https://docs.expo.io/versions/v33.0.0/react-native/performance/][Optimize performance]]
- Refactor subscriptions to use signal graph pattern
- Refactor views to be very thin (no operations)
- Use animation api for state indication
- All start timestamps end at 45 sec and all stop time stamps end at 15 sec to have same minute without overlap
- Fitbit OS integration / companion app
- Move all side effects (scroll To, bottom sheet collapse) to ~reg-fx~ in re-frame

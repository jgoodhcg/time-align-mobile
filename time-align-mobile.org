#+TODO: TODO DOSUB | DONE CANCELED 
#+PROPERTY: Effort_ALL 0 0:10 0:30 1:00 2:00 3:00 4:00 5:00 6:00 7:00
#+COLUMNS: %40ITEM(Task) %10Confidence(Confidence){mean} %17Effort(Estimated Effort){:} %CLOCKSUM
#+STARTUP: overview

* DOSUB Time Align Mobile
  :LOGBOOK:
  CLOCK: [2019-09-15 Sun 11:20]--[2019-09-15 Sun 11:29] =>  0:09
  CLOCK: [2019-09-06 Fri 22:29]--[2019-09-06 Fri 22:36] =>  0:07
  CLOCK: [2019-08-11 Sun 19:08]--[2019-08-11 Sun 19:17] =>  0:09
  CLOCK: [2019-08-10 Sat 12:51]--[2019-08-10 Sat 13:11] =>  0:20
  CLOCK: [2019-07-20 Sat 21:52]--[2019-07-20 Sat 22:10] =>  0:18
  CLOCK: [2019-07-20 Sat 18:55]--[2019-07-20 Sat 18:56] =>  0:01
  CLOCK: [2019-07-13 Sat 18:20]--[2019-07-13 Sat 18:42] =>  0:22
  CLOCK: [2019-06-29 Sat 18:06]--[2019-06-29 Sat 18:10] =>  0:04
  CLOCK: [2019-06-17 Mon 17:42]--[2019-06-17 Mon 18:14] =>  0:32
  CLOCK: [2019-05-09 Thu 20:30]--[2019-05-09 Thu 20:55] =>  0:25
  CLOCK: [2018-09-21 Fri 07:39]--[2018-09-21 Fri 07:40] =>  0:01
  CLOCK: [2018-08-29 Wed 14:41]--[2018-08-29 Wed 14:46] =>  0:05
  CLOCK: [2018-08-19 Sun 16:05]--[2018-08-19 Sun 16:09] =>  0:04
  CLOCK: [2018-08-19 Sun 15:56]--[2018-08-19 Sun 16:05] =>  0:09
  CLOCK: [2018-08-18 Sat 15:07]--[2018-08-18 Sat 15:11] =>  0:04
  CLOCK: [2018-07-17 Tue 18:58]--[2018-07-17 Tue 19:17] =>  0:19
  :END:
** DOSUB Release to strangers
*** DOSUB New day design
    :PROPERTIES:
    :Effort:   24:00
    :Confidence: 50
    :END:
    :LOGBOOK:
    CLOCK: [2019-09-10 Tue 19:15]--[2019-09-10 Tue 19:17] =>  0:02
    CLOCK: [2019-08-10 Sat 19:29]--[2019-08-10 Sat 19:36] =>  0:07
    CLOCK: [2019-08-10 Sat 13:11]--[2019-08-10 Sat 13:12] =>  0:01
    :END:
**** DONE Top bar with scroll view below
     CLOSED: [2019-08-10 Sat 14:47]
     :LOGBOOK:
     CLOCK: [2019-08-10 Sat 14:39]--[2019-08-10 Sat 14:47] =>  0:08
     CLOCK: [2019-08-10 Sat 13:37]--[2019-08-10 Sat 13:54] =>  0:17
     CLOCK: [2019-08-10 Sat 13:28]--[2019-08-10 Sat 13:36] =>  0:08
     CLOCK: [2019-08-10 Sat 13:24]--[2019-08-10 Sat 13:28] =>  0:04
     CLOCK: [2019-08-10 Sat 13:15]--[2019-08-10 Sat 13:24] =>  0:09
     CLOCK: [2019-08-10 Sat 13:12]--[2019-08-10 Sat 13:14] =>  0:02
     :END:
- [X] Get to a clean commit
- [X] Blow away everything in day-screen ns and the day-comp ns
- [X] Set up a day-comp ns with a placeholder
- [X] Get code to compile and show placeholder for pattern-planning and day screens
- [X] Change day screen ns
- [X] Add a top bar section
- [X] Add a scroll view below it
**** DONE Add time section
     CLOSED: [2019-08-10 Sat 16:56]
     :LOGBOOK:
     CLOCK: [2019-08-10 Sat 16:45]--[2019-08-10 Sat 16:56] =>  0:11
     CLOCK: [2019-08-10 Sat 14:39]--[2019-08-10 Sat 15:40] =>  1:01
     :END:
- [X] Get relative positioning figured out
- [X] Add dividers
- [X] Figure out how it relates to periods
**** DONE Add Zomming functionality
     CLOSED: [2019-08-10 Sat 19:27]
     :LOGBOOK:
     CLOCK: [2019-08-10 Sat 18:21]--[2019-08-10 Sat 19:27] =>  1:06
     :END:
- [X] Put pixel ration in app-db
- [X] Make handlers/subs to adjust
- [X] Use deep merge on loading and importing db to handle app-db accretion
**** DONE Add periods/templates (elements)
     CLOSED: [2019-08-13 Tue 19:42]
     :LOGBOOK:
     CLOCK: [2019-08-13 Tue 18:14]--[2019-08-13 Tue 18:45] =>  0:31
     CLOCK: [2019-08-12 Mon 18:13]--[2019-08-12 Mon 18:54] =>  0:41
     CLOCK: [2019-08-12 Mon 18:08]--[2019-08-12 Mon 18:13] =>  0:05
     CLOCK: [2019-08-11 Sun 18:07]--[2019-08-11 Sun 18:25] =>  0:18
     CLOCK: [2019-08-11 Sun 17:47]--[2019-08-11 Sun 18:07] =>  0:20
     CLOCK: [2019-08-11 Sun 14:41]--[2019-08-11 Sun 15:47] =>  1:06
     CLOCK: [2019-08-11 Sun 14:40]--[2019-08-11 Sun 14:40] =>  0:00
     CLOCK: [2019-08-11 Sun 13:16]--[2019-08-11 Sun 13:43] =>  0:27
     CLOCK: [2019-08-10 Sat 23:43]--[2019-08-10 Sat 23:50] =>  0:07
     CLOCK: [2019-08-10 Sat 23:12]--[2019-08-10 Sat 23:29] =>  0:17
     CLOCK: [2019-08-10 Sat 22:19]--[2019-08-10 Sat 23:09] =>  0:50
     CLOCK: [2019-08-10 Sat 22:09]--[2019-08-10 Sat 22:19] =>  0:10
     CLOCK: [2019-08-10 Sat 21:56]--[2019-08-10 Sat 22:08] =>  0:12
     CLOCK: [2019-08-10 Sat 20:58]--[2019-08-10 Sat 21:36] =>  0:38
     CLOCK: [2019-08-10 Sat 20:33]--[2019-08-10 Sat 20:57] =>  0:24
     :END:
 - [X] Refactor the day comp
 - [X] Move tim indicators
 - [X] Add reference from old rendering
 - [X] Make the time indicator bar position (center of text) the exact time of the indicator
 - [X] Actually fix teh time indicator
 - [X] Add elements comp and borders
 - [X] Render some elements in the correct position
 - [X] Add navigators to day top bar
 - [X] Refactor rendering element
 - [X] Fix borders
 - [X] Render collision group offsets
 - [X] Selection
 
**** DONE Dragging element to move on selection
     CLOSED: [2019-09-04 Wed 15:10]
     :LOGBOOK:
     CLOCK: [2019-09-04 Wed 14:33]--[2019-09-04 Wed 14:33] =>  0:00
     CLOCK: [2019-09-04 Wed 14:32]--[2019-09-04 Wed 14:32] =>  0:00
     CLOCK: [2019-09-04 Wed 13:48]--[2019-09-04 Wed 14:32] =>  0:44
     CLOCK: [2019-09-04 Wed 13:38]--[2019-09-04 Wed 13:45] =>  0:07
     CLOCK: [2019-09-03 Tue 22:54]--[2019-09-03 Tue 23:25] =>  0:31
     CLOCK: [2019-09-03 Tue 22:09]--[2019-09-03 Tue 22:54] =>  0:45
     CLOCK: [2019-09-03 Tue 21:40]--[2019-09-03 Tue 22:01] =>  0:21
     CLOCK: [2019-09-03 Tue 21:26]--[2019-09-03 Tue 21:38] =>  0:12
     CLOCK: [2019-09-03 Tue 21:17]--[2019-09-03 Tue 21:26] =>  0:09
     CLOCK: [2019-09-03 Tue 16:52]--[2019-09-03 Tue 17:10] =>  0:18
     CLOCK: [2019-09-03 Tue 16:34]--[2019-09-03 Tue 16:51] =>  0:17
     CLOCK: [2019-09-03 Tue 15:50]--[2019-09-03 Tue 16:34] =>  0:44
     CLOCK: [2019-09-03 Tue 15:28]--[2019-09-03 Tue 15:31] =>  0:03
     CLOCK: [2019-09-02 Mon 17:13]--[2019-09-02 Mon 18:00] =>  0:47
     CLOCK: [2019-09-02 Mon 17:06]--[2019-09-02 Mon 17:13] =>  0:07
     CLOCK: [2019-09-01 Sun 16:45]--[2019-09-01 Sun 16:58] =>  0:13
     CLOCK: [2019-08-30 Fri 16:12]--[2019-08-30 Fri 16:12] =>  0:00
     CLOCK: [2019-08-30 Fri 16:01]--[2019-08-30 Fri 16:11] =>  0:10
     CLOCK: [2019-08-30 Fri 15:49]--[2019-08-30 Fri 15:58] =>  0:09
     CLOCK: [2019-08-30 Fri 14:50]--[2019-08-30 Fri 15:38] =>  0:48
     CLOCK: [2019-08-25 Sun 16:32]--[2019-08-25 Sun 17:11] =>  0:39
     CLOCK: [2019-08-25 Sun 16:26]--[2019-08-25 Sun 16:32] =>  0:06
     CLOCK: [2019-08-25 Sun 16:25]--[2019-08-25 Sun 16:25] =>  0:00
     CLOCK: [2019-08-25 Sun 15:50]--[2019-08-25 Sun 16:24] =>  0:34
     CLOCK: [2019-08-25 Sun 12:13]--[2019-08-25 Sun 12:13] =>  0:00
     CLOCK: [2019-08-25 Sun 12:05]--[2019-08-25 Sun 12:13] =>  0:08
     CLOCK: [2019-08-24 Sat 18:21]--[2019-08-24 Sat 18:24] =>  0:03
     CLOCK: [2019-08-24 Sat 18:05]--[2019-08-24 Sat 18:09] =>  0:04
     CLOCK: [2019-08-24 Sat 17:54]--[2019-08-24 Sat 17:59] =>  0:05
     CLOCK: [2019-08-24 Sat 17:29]--[2019-08-24 Sat 17:53] =>  0:24
     CLOCK: [2019-08-24 Sat 16:26]--[2019-08-24 Sat 16:31] =>  0:05
     CLOCK: [2019-08-24 Sat 14:00]--[2019-08-24 Sat 14:29] =>  0:29
     CLOCK: [2019-08-24 Sat 13:43]--[2019-08-24 Sat 14:00] =>  0:17
     CLOCK: [2019-08-24 Sat 13:18]--[2019-08-24 Sat 13:43] =>  0:25
     CLOCK: [2019-08-20 Tue 19:13]--[2019-08-20 Tue 19:16] =>  0:03
     CLOCK: [2019-08-18 Sun 19:10]--[2019-08-18 Sun 19:20] =>  0:10
     CLOCK: [2019-08-18 Sun 12:45]--[2019-08-18 Sun 13:11] =>  0:26
     CLOCK: [2019-08-18 Sun 12:17]--[2019-08-18 Sun 12:38] =>  0:21
     CLOCK: [2019-08-17 Sat 20:52]--[2019-08-17 Sat 22:08] =>  1:16
     CLOCK: [2019-08-17 Sat 15:27]--[2019-08-17 Sat 16:25] =>  0:58
     CLOCK: [2019-08-17 Sat 14:53]--[2019-08-17 Sat 15:00] =>  0:07
     CLOCK: [2019-08-17 Sat 14:06]--[2019-08-17 Sat 14:40] =>  0:34
     CLOCK: [2019-08-17 Sat 13:49]--[2019-08-17 Sat 13:59] =>  0:10
     CLOCK: [2019-08-17 Sat 11:20]--[2019-08-17 Sat 11:52] =>  0:32
     CLOCK: [2019-08-17 Sat 10:43]--[2019-08-17 Sat 10:43] =>  0:00
     CLOCK: [2019-08-17 Sat 10:42]--[2019-08-17 Sat 10:43] =>  0:01
     CLOCK: [2019-08-17 Sat 09:28]--[2019-08-17 Sat 09:52] =>  0:24
     CLOCK: [2019-08-17 Sat 09:09]--[2019-08-17 Sat 09:28] =>  0:19
     CLOCK: [2019-08-16 Fri 18:11]--[2019-08-16 Fri 19:23] =>  1:12
     CLOCK: [2019-08-14 Wed 18:15]--[2019-08-14 Wed 19:29] =>  1:14
     CLOCK: [2019-08-13 Tue 19:41]--[2019-08-13 Tue 19:41] =>  0:00
     CLOCK: [2019-08-13 Tue 19:10]--[2019-08-13 Tue 19:41] =>  0:31
     :END:
-[X] Read about gesture handlers
- https://docs.expo.io/versions/latest/sdk/gesture-handler/
- https://kmagiera.github.io/react-native-gesture-handler/docs/about-handlers.html
- [X] Add a pan gesture handler to something
- [X] Play with nested handlers and waitfor
- [X] Update app to remove scroll-view-gesture comp warnings
  - [X] Update to sdk 33
  - [X] Update shadow-cljs
    - Apparently only the devDependencies in package.json matters?
  - [X] Resolve warnings
    - File system warning doesn't make sense ...
    - [X] Remove keep awake usage
      - https://github.com/thheller/shadow-cljs/issues/513
      - Might add it back later if it is an issue https://docs.expo.io/versions/latest/sdk/keep-awake/
  - [X] Update to sdk 34
- [X] Figure out smooth pan movement
  - https://gist.github.com/scottdw/2960070#file-stats-clj-L5
  - https://stackoverflow.com/a/3761318/5040125
  - https://github.com/kmagiera/react-native-gesture-handler/issues/621#issuecomment-522272948
  - After graphing it out it seems like the values jump by 100 for a handful of events then jump back
  - +Need to use absoluteY but it seems to behave like a relative thing when I scroll+
  - Solution is to wrap scroll in pan and use selected as a toggle (lock/mutex)
    - Now ~nativeEvent.y~ can be used and it works for the entire screen or day view (hopefully).
    - Can be resumed after pan ends
- [X] Figure out gesture handler experience
  - Be able to scroll
  - When holding an element enter a state to drag it around updating start/stop on release
    - Needs a ~pan~ on the day view that is simultaneous with a ~long press~ on each element
    - When ~long press~ is active set the selection state
    - When selection state is active then the ~pan~ is enabled it updates the form
    - When ~long press~ is released the pan is disabled and the form is saved
  - ~Tap~ an element opens form in bottom sheet
    - Needs to wrap the ~long press~ and wait for it
    - ~Tap~ should not activate if the long press activates then ends
- [-] Implement gesture handler experience on calendar page
  - [X] (scroll) Add scroll view that locks out on selection and waits for pinch
  - [X] (drag) Add pan gesture handler that locks out on no selection and waits for pinch
    - [X] Fix top being at finger
  - [X] (zoom) Add pinch gesture
  - [X] (bottom sheet pop up selection) Add tap handler that wraps element and waits on long press
  - [X] (movement selection) Add long press wrapping element directly
  - [-] Use simultaneous prop for long press and pan
    - Having a hard time achieving this
    - https://github.com/kmagiera/react-native-gesture-handler/issues/434
  - [X] Use rect button
  - [X] Replace long press with double tap for movement selection
- [X] Implement handlers on day page
  - [X] Add top level todo items
  - [X] Refactor selections
    - [X] App-db
      - [X] Reformat ns
    - [X] Handlers
    - [X] Subscriptions
  - [X] Scroll
  - [X] Pan
  - [X] Pinch
  - [X] Rect-button
  - [X] Double-tap
  - [X] Figure out how to get lock out scroll view and pan handler
  - [X] Figure out why movement changes duration randomly
    - It was just /in play/
  - [X] Make selection indicator look better
  - [X] Remove println
  - [X] Fix document picker
**** DONE Optimize performance
     CLOSED: [2019-09-15 Sun 11:28]
     :LOGBOOK:
     CLOCK: [2019-09-04 Wed 16:13]--[2019-09-04 Wed 16:15] =>  0:02
     CLOCK: [2019-09-04 Wed 15:10]--[2019-09-04 Wed 15:14] =>  0:04
     :END:
***** DONE Try chrome performance monitor
      CLOSED: [2019-09-04 Wed 16:13]
      :LOGBOOK:
      CLOCK: [2019-09-04 Wed 16:13]--[2019-09-04 Wed 16:13] =>  0:00
      CLOCK: [2019-09-04 Wed 16:13]--[2019-09-04 Wed 16:13] =>  0:00
      CLOCK: [2019-09-04 Wed 15:27]--[2019-09-04 Wed 15:41] =>  0:14
      :END:
It doesn't seem to break down into anything recognizable as a cljs function.
***** CANCELED Use some cljs perf monitoring
      CLOSED: [2019-09-06 Fri 22:33]
      :LOGBOOK:
      CLOCK: [2019-09-04 Wed 16:15]--[2019-09-04 Wed 16:27] =>  0:12
      :END:
https://github.com/ptaoussanis/tufte
***** DONE Optimize Other areas
      CLOSED: [2019-09-15 Sun 11:28]
      :LOGBOOK:
      CLOCK: [2019-09-04 Wed 19:06]--[2019-09-04 Wed 19:13] =>  0:07
      CLOCK: [2019-09-04 Wed 16:27]--[2019-09-04 Wed 16:56] =>  0:29
      :END:
 Disabled pan/drag option for now
****** CANCELED Expo/ReactNative profiling
       CLOSED: [2019-09-06 Fri 22:35]
 Wait [[https://github.com/facebook/react-native/issues/18044#issuecomment-517763893][for this]]

****** DONE Debounce/Throttle
       CLOSED: [2019-09-04 Wed 20:19]
       :LOGBOOK:
       CLOCK: [2019-09-04 Wed 19:55]--[2019-09-04 Wed 20:19] =>  0:24
       CLOCK: [2019-09-04 Wed 19:14]--[2019-09-04 Wed 19:50] =>  0:36
       :END:
https://www.martinklepsch.org/posts/simple-debouncing-in-clojurescript.html
https://medium.com/@alehatsman/clojurescript-throttle-debounce-a651dfb66ac
****** DONE Optimize re-frame
       CLOSED: [2019-09-15 Sun 11:28]
       :LOGBOOK:
       CLOCK: [2019-09-06 Fri 17:58]--[2019-09-06 Fri 18:04] =>  0:06
       CLOCK: [2019-09-05 Thu 00:00]--[2019-09-05 Thu 00:16] =>  0:16
       :END:
Some [[https://github.com/Day8/re-frame/blob/master/docs/Performance-Problems.md][problems]] I have are anonymous functions on each element and too big of state being passed into components.
I can't use re-frame 10x because it is too specific to a browser, but I might be able to use [[https://github.com/Day8/re-frame/blob/master/docs/Debugging.md][some older ways]] of monitoring re-frame.
******* DONE Problem 2 exploration ( tightly coupled state )
        CLOSED: [2019-09-06 Fri 18:03]
        :LOGBOOK:
        CLOCK: [2019-09-05 Thu 18:51]--[2019-09-05 Thu 20:05] =>  1:14
        :END:
- [X] Simplify refs as much as possible
******** DONE Dive into unknown subscription patterns
         CLOSED: [2019-09-06 Fri 18:03]
         :LOGBOOK:
         CLOCK: [2019-09-05 Thu 21:54]--[2019-09-05 Thu 22:34] =>  0:40
         CLOCK: [2019-09-05 Thu 20:06]--[2019-09-05 Thu 20:49] =>  0:43
         :END:
https://github.com/Day8/re-frame/blob/master/docs/SubscriptionInfographic.md
Apparently registered subscriptions are supposed to do all the computation and can be nested.
Hiccup is supposed to not have any computation.
This is a new concept.
Read through a bunch of [[https://purelyfunctional.tv/guide/database-structure-in-re-frame/][this guide]] on how to do things in re-frame.
I messed up by not indexing buckets and periods by their id.
My lookups require iterating over the entire collection on each update.
Which is probably a big reason why dragging performance is so bad.
Hopefully I can refactor without starting over.
********* DONE Plan how to fix everything given new information
          CLOSED: [2019-09-06 Fri 18:03]
          :LOGBOOK:
          CLOCK: [2019-09-06 Fri 17:57]--[2019-09-06 Fri 17:57] =>  0:00
          :END:
 - Areas affected are limited to what is needed to run the day-planning screen
 - Database has ~buckets~, ~periods~ indexed (patterns and templates later)
 - All affected subscriptions utilize the graph functionality
 - Subscribe calls are as deep as they can go in view components
 - Listen function is utilized
 - View comps are only concerned with generating hiccup
********** Relevant subscriptions
 #+begin_src clojure
   ;; day-planning
   periods           (subscribe [:get-collision-grouped-periods])
   displayed-day     (subscribe [:get-day-time-navigator])
   selected-period   (subscribe [:get-selection-period-movement])
   period-in-play    (subscribe [:get-period-in-play])
   now               (subscribe [:get-now])
   buckets           (subscribe [:get-buckets])
   patterns          (subscribe [:get-patterns])
   templates         (subscribe [:get-templates])
   ;; day
   px-ratio-config   @(subscribe [:get-pixel-to-minute-ratio])
 #+end_src

******* DONE Refactor app-db to use hash map for buckets and periods collection
        CLOSED: [2019-09-08 Sun 19:28]
******** DONE Initial spec and default db change
         CLOSED: [2019-09-06 Fri 21:24]
         :LOGBOOK:
         CLOCK: [2019-09-06 Fri 18:04]--[2019-09-06 Fri 19:12] =>  1:08
         :END:
******** DONE Fix repl
         CLOSED: [2019-09-06 Fri 21:04]
         :LOGBOOK:
         CLOCK: [2019-09-06 Fri 20:30]--[2019-09-06 Fri 21:04] =>  0:34
         :END:
Attempted to refactor app-db and discovered that my repl is broken...
Attempted to install new versions of cider.nrepl and shadow-cljs.
Also attempted to use intellij/cursive but couldn't figure out how to connect to cljs repl.

 - [X] Try to [[https://docs.cider.mx/cider/basics/installation.html][install]] package
 - [X] Try to fix emacs not connecting to gnu archive
   - Added some magic line to ~.spacemacs~ to fix https melpa connection
   - Updated packages (got the latest *cider* from that)
   - Followed [[https://shadow-cljs.github.io/docs/UsersGuide.html#_launch_the_clojurescript_repl][shadow-cljs user guide]] instructions on cider launching
     - There is a difference between ~cider-jack-in-clojurescript~ and ~cider-jack-in-cljs~ ( must use the later )
     - Must wait for prompts (doing anything interrupts the flow)
   
******** DONE Get elements to show up in day display
         CLOSED: [2019-09-06 Fri 21:44]
         :LOGBOOK:
         CLOCK: [2019-09-06 Fri 21:24]--[2019-09-06 Fri 21:44] =>  0:20
         :END:

******** DONE Work through runtime errors trying to select and move period
         CLOSED: [2019-09-07 Sat 13:02]
         :LOGBOOK:
         CLOCK: [2019-09-07 Sat 10:45]--[2019-09-07 Sat 13:02] =>  2:17
         :END:

******** DONE Stress movement with *lots* of buckets and periods in default app-db
         CLOSED: [2019-09-07 Sat 15:30]
         :LOGBOOK:
         CLOCK: [2019-09-07 Sat 15:30]--[2019-09-07 Sat 15:37] =>  0:07
         CLOCK: [2019-09-07 Sat 14:09]--[2019-09-07 Sat 15:30] =>  1:21
         :END:
******** DONE Figure out why too many overlapping periods push to the other track
         CLOSED: [2019-09-08 Sun 11:18]
         :LOGBOOK:
         CLOCK: [2019-09-08 Sun 10:25]--[2019-09-08 Sun 11:18] =>  0:53
         :END:
Fix it crossing the boundaries of the component with some ~min~ wrappers.
******** DONE Fix runtime errors attempting to add new buckets end periods
         CLOSED: [2019-09-08 Sun 18:10]
         :LOGBOOK:
         CLOCK: [2019-09-08 Sun 17:40]--[2019-09-08 Sun 18:10] =>  0:30
         CLOCK: [2019-09-08 Sun 17:18]--[2019-09-08 Sun 17:40] =>  0:22
         CLOCK: [2019-09-08 Sun 15:42]--[2019-09-08 Sun 17:18] =>  1:36
         CLOCK: [2019-09-08 Sun 13:03]--[2019-09-08 Sun 13:33] =>  0:30
         CLOCK: [2019-09-08 Sun 12:50]--[2019-09-08 Sun 13:02] =>  0:12
         CLOCK: [2019-09-08 Sun 12:43]--[2019-09-08 Sun 12:50] =>  0:07
         CLOCK: [2019-09-08 Sun 12:38]--[2019-09-08 Sun 12:40] =>  0:02
         CLOCK: [2019-09-08 Sun 11:53]--[2019-09-08 Sun 12:02] =>  0:09
         CLOCK: [2019-09-08 Sun 11:42]--[2019-09-08 Sun 11:47] =>  0:05
         CLOCK: [2019-09-08 Sun 11:27]--[2019-09-08 Sun 11:42] =>  0:15
         CLOCK: [2019-09-08 Sun 11:19]--[2019-09-08 Sun 11:21] =>  0:02
         :END:
- [X] Buckets page
- [X] Bucket form load 
- [X] Changes sub  for bucket form
- [X] Save bucket changes handler 
- [x] Loading period form 
- [X] Saving period form 
- [X] Add period 
- [X] Add bucket 
- [X] Delete bucket 
- [X] Delete period 
******* CANCELED Refactor subscriptions 
        CLOSED: [2019-09-15 Sun 11:27]
- [ ] Subs use signal graph pattern
- [ ] Subs Hold all the logic (very thin hiccup only views)
- [ ] Subscribe calls are as deep as they can go in view components
- [ ] Listen function is utilized

****** CANCELED Circumnavigate reframe events
       CLOSED: [2019-09-15 Sun 11:26]
       :LOGBOOK:
       CLOCK: [2019-09-06 Fri 17:44]--[2019-09-06 Fri 17:56] =>  0:12
       :END:
The idea here is to have a ~movement selected~ component that has an ~r/atom~ for its start/stop times.
Then the pan gesture event handler will update that r/atom to move the element around.
The pan gesture state change handler will dispatch a single update event on the end state change.
Then the selected element comp will not be displayed and the actual period will be rendered in the updated position.
**** CANCELED Stretch mode
     CLOSED: [2019-09-04 Wed 16:56]
**** DONE Add bottom sheet for period editing and selection
     CLOSED: [2019-09-14 Sat 18:08]
     :LOGBOOK:
     CLOCK: [2019-09-14 Sat 17:58]--[2019-09-14 Sat 18:08] =>  0:10
     CLOCK: [2019-09-14 Sat 17:33]--[2019-09-14 Sat 17:45] =>  0:12
     CLOCK: [2019-09-14 Sat 16:20]--[2019-09-14 Sat 16:40] =>  0:20
     CLOCK: [2019-09-14 Sat 16:14]--[2019-09-14 Sat 16:19] =>  0:05
     CLOCK: [2019-09-14 Sat 15:25]--[2019-09-14 Sat 15:52] =>  0:27
     CLOCK: [2019-09-14 Sat 15:12]--[2019-09-14 Sat 15:25] =>  0:13
     CLOCK: [2019-09-14 Sat 13:19]--[2019-09-14 Sat 13:29] =>  0:10
     CLOCK: [2019-09-14 Sat 12:57]--[2019-09-14 Sat 13:19] =>  0:22
     CLOCK: [2019-09-13 Fri 19:39]--[2019-09-13 Fri 20:12] =>  0:33
     CLOCK: [2019-09-10 Tue 22:19]--[2019-09-10 Tue 22:46] =>  0:27
     CLOCK: [2019-09-10 Tue 21:29]--[2019-09-10 Tue 22:16] =>  0:47
     CLOCK: [2019-09-10 Tue 18:04]--[2019-09-10 Tue 19:14] =>  1:10
     CLOCK: [2019-09-09 Mon 21:25]--[2019-09-09 Mon 21:45] =>  0:20
     CLOCK: [2019-09-09 Mon 20:37]--[2019-09-09 Mon 21:19] =>  0:42
     CLOCK: [2019-09-09 Mon 19:45]--[2019-09-09 Mon 20:30] =>  0:45
     CLOCK: [2019-09-09 Mon 19:15]--[2019-09-09 Mon 19:41] =>  0:26
     CLOCK: [2019-09-08 Sun 19:49]--[2019-09-08 Sun 20:26] =>  0:37
     CLOCK: [2019-09-08 Sun 19:28]--[2019-09-08 Sun 19:44] =>  0:16
     CLOCK: [2019-09-04 Wed 16:56]--[2019-09-04 Wed 18:28] =>  1:32
     :END:
https://github.com/osdnk/react-native-reanimated-bottom-sheet
- [X] Attempt to replace drawer
  - Didn't work
- [X] Add deps
- [X] Placeholder on the day screen
- [X] Use ~ref~ prop to dynamically close/open
- [X] Display an icon and add functions
- [X] Get functions working
- [X] Figure out how to get bottom-sheet to cover the view port and not just the bottom portion of the scroll view
- [X] Get the drawer to play nice with the bottom sheet
- [X] Fix property access error
- [X] Style transform buttons
- [X] Make edit selection detectable
- [X] Make all of day display visible while edit menu is up
- [X] Make movement selection clear edit
- [X] Fix changing bucket on selected edit break transform button actions
- [X] Collapse bottom sheet on delete period
- [X] Create safe fn for bottom sheet collapse
- [X] Add the edit form
- [X] Fix delete actions on elements
**** DONE Add double tap on screen to add period
     CLOSED: [2019-09-15 Sun 14:44]
     :LOGBOOK:
     CLOCK: [2019-09-15 Sun 13:57]--[2019-09-15 Sun 14:44] =>  0:47
     CLOCK: [2019-09-15 Sun 12:25]--[2019-09-15 Sun 12:30] =>  0:05
     CLOCK: [2019-09-14 Sat 18:10]--[2019-09-14 Sat 18:52] =>  0:42
     :END:
**** TODO Get pattern planning view working
     :LOGBOOK:
     CLOCK: [2019-09-16 Mon 19:43]--[2019-09-16 Mon 20:51] =>  1:08
     CLOCK: [2019-09-16 Mon 18:59]--[2019-09-16 Mon 19:30] =>  0:31
     CLOCK: [2019-09-16 Mon 16:26]--[2019-09-16 Mon 16:29] =>  0:03
     CLOCK: [2019-09-16 Mon 16:19]--[2019-09-16 Mon 16:22] =>  0:03
     CLOCK: [2019-09-16 Mon 15:39]--[2019-09-16 Mon 15:58] =>  0:19
     CLOCK: [2019-09-16 Mon 15:04]--[2019-09-16 Mon 15:32] =>  0:28
     CLOCK: [2019-09-16 Mon 11:30]--[2019-09-16 Mon 13:22] =>  1:52
     CLOCK: [2019-09-15 Sun 17:16]--[2019-09-15 Sun 19:05] =>  1:49
     CLOCK: [2019-09-15 Sun 14:55]--[2019-09-15 Sun 15:00] =>  0:05
     :END:
- [X] Fix top level template form
- [X] Get pattern planning to render
- [X] Get template edit select working
- [X] Add edit item button
- [X] Get compact form buttons working
- [X] Get duration comp working
- [X] Get top level save working
- [X] Get template movement working
- [X] Add planned field to templates
- [ ] Implement transform functions for buttons
**** TODO Add now indicator for periods
**** TODO Fix selection indication 
- borders in every state (same color for no selection)
- style dotted (or dashed) for movement
**** TODO Add FAB
**** DONE Add Dynamic text color to elements
     CLOSED: [2019-09-06 Fri 22:28]
     :LOGBOOK:
     CLOCK: [2019-09-06 Fri 21:56]--[2019-09-06 Fri 22:28] =>  0:32
     :END:
*** CANCELED Fix drawer bug
    CLOSED: [2019-09-10 Tue 19:16]
    :PROPERTIES:
    :Effort:   3:00
    :Confidence: 80
    :END:
When a contained button or surface element is used on the screen component it doesn't /go under/ the drawer overlay
Also might need to replace drawer with another component library to support non swipe opening for a11y.
*** TODO Add locked period mechanism
    :PROPERTIES:
    :Effort:   8:00
    :Confidence: 65
    :END:
When using the transform arrows to move things around the other periods (in the day?) should get pushed unless locked.
Have a lock / unlock all button.
*** TODO Mobile friendly data editor
    :PROPERTIES:
    :Effort:   8:00
    :Confidence: 75
    :END:
    :LOGBOOK:
    CLOCK: [2019-08-08 Thu 21:25]--[2019-08-08 Thu 22:56] =>  1:31
    CLOCK: [2019-08-08 Thu 19:42]--[2019-08-08 Thu 20:42] =>  1:00
    :END:
https://gist.github.com/jgoodhcg/ed3cb0b51f117553e2b04ca62946b68d
*** TODO Checklists
    :PROPERTIES:
    :Effort:   6:00
    :Confidence: 65
    :END:
- [ ] Add basic data to spec template
- [ ] Add basic data to spec period
- [ ] Create components for forms
  - [ ] Period
  - [ ] Period compact (modal?)
  - [ ] Template
  - [ ] Template compact (modal?)
  - [ ] Create complete state indicator
*** TODO Notifications (push?)
    :PROPERTIES:
    :Effort:   4:00
    :Confidence: 80
    :END:
    :LOGBOOK:
    CLOCK: [2019-07-27 Sat 17:01]--[2019-07-27 Sat 17:54] =>  0:53
    :END:
- [[https://docs.expo.io/versions/latest/sdk/notifications/#notificationsschedulelocalnotificationasynclocalnotification-schedulingoptions][Schedule local notifications]]
- [[https://docs.expo.io/versions/latest/sdk/notifications/#subscribing-to-notifications][Listen for notifications]]
- [X] Test a local notification
- [ ] Schedule a notification side effect on planned period creation
  - [ ] Add period handler
  - [ ] Apply pattern handler
- [ ] Register a listener to navigate to day
*** TODO Fix template editing bug with end time
    :PROPERTIES:
    :Confidence: 65
    :Effort:   2:00
    :END:
Using the arrows to have the start go to the day before or end to day after seems to work fine.
Check that it works past 24+ hours.
Using the button to set the time into yesterday or tomorrow doesn't work. (needs to be relative...)
*** TODO Fix navigation
    :PROPERTIES:
    :Effort:   5:00
    :Confidence: 50
    :END:
- [ ] Move history to app-db
- [ ] Limit to X items
- [ ] Back should pop off history
- [ ] Delete actions should nav-back
*** TODO Markov chain prediction
    :PROPERTIES:
    :Effort:   16:00
    :Confidence: 30
    :END:
*** TODO Report Page
    :PROPERTIES:
    :Effort:   40:00
    :Confidence: 25
    :END:
*** TODO Queue page
    :PROPERTIES:
    :Effort:   10:00
    :Confidence: 50
    :END:
**** TODO Add queue definition to app-db
- [ ] queue definition
  - Include priority?
- [ ] ~:queue~ key under ~:bucket~
**** TODO Add queue form
**** TODO Add queue list
**** TODO Add conversion to planned period function
*** TODO Calendar Page
    :PROPERTIES:
    :Effort:   30:00
    :Confidence: 50
    :END:
*** TODO Analytics
    :PROPERTIES:
    :Effort:   4:00
    :Confidence: 25
    :END:
** Onboard other developers
*** DONE Onboard Josh
    CLOSED: [2019-09-07 Sat 17:58]
    :LOGBOOK:
    CLOCK: [2019-09-07 Sat 17:15]--[2019-09-07 Sat 17:58] =>  0:43
    :END:
** Dreams
- Meta data (with mobile friendly editor) on all entities
- [[https://practicalli.github.io/spacemacs/improving-code/linting/][Linting]]
- Multiple play timers
- Fully namespaced keys only
- Add Extra buttons to selection menus
  - Add period to pattern
  - Edit on full form
- DRY up spectre paths
- Spec everything
- Unit test every function
- Accessibility
- Energy meter
- Advanced notifications with interaction
- [[https://stackoverflow.com/questions/46680890/react-native-how-to-scroll-a-scrollview-to-a-given-location-after-navigation-f][better scrolling]]
- [[https://docs.expo.io/versions/v33.0.0/react-native/performance/][Optimize performance]]
- Use [[https://facebook.github.io/react-native/docs/scrollview.html#scrollto][scrollTo]] when an element is selected for edit
- Transform buttons' icon shows arrows in relation to an element (box)
- Refactor subscriptions to use signal graph pattern

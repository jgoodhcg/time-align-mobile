;; Connected to nREPL server - nrepl://localhost:8202
;; CIDER 0.22.1snapshot (package: 20190903.1609), nREPL 0.6.0
;; Clojure 1.10.1, Java 1.8.0_212
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <, ,> to quickly invoke some REPL command
;; * Press <, s s> to switch between the REPL and a Clojure file
;; * Press <M-x cider-find-var> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <, h h> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
[:app] Configuring build.
[:app] Compiling ...
[:app] Build completed. (189 files, 1 compiled, 0 warnings, 4.01s)
To quit, type: :cljs/quit
[:selected :app]WARNING: No Clojure project was detected. The
refactor-nrepl middleware was not enabled. (You can mute this
warning by customizing `cljr-suppress-no-project-warning'.)shadow.user> 
cljs.user> (+ 1 1)
No application has connected to the REPL server. Make sure your JS environment has loaded your compiled ClojureScript code.
cljs.user> (+ 1 1)
2
cljs.user> (ns time-align-mobile.subs
             (:require [re-frame.core :refer [reg-sub]]
                       [time-align-mobile.helpers :as helpers]
                       [time-align-mobile.helpers :refer [same-day?]]
                       [com.rpl.specter :as sp :refer-macros [select select-one setval transform]]))
niltime-align-mobile.substime-align-mobile.subs
time-align-mobile.subs> (select [:a sp/ALL] {:a {:b "2" :c "3"}})
[[:b "2"] [:c "3"]]
time-align-mobile.subs> (select [:a sp/ALL] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[]
time-align-mobile.subs> (select [:buckets sp/ALL] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[1 {:id 1, :periods {2 {:id 2}}}]]
time-align-mobile.subs> (select [:buckets sp/ALL (sp/collect-one (sp/submap [:id]))] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{} [1 {:id 1, :periods {2 {:id 2}}}]]]
time-align-mobile.subs> (select [:buckets sp/ALL (sp/collect-one )] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[[1 {:id 1, :periods {2 {:id 2}}}] [1 {:id 1, :periods {2 {:id 2}}}]]]
time-align-mobile.subs> (select [:buckets sp/ALL (sp/collect-one (sp/LAST (sp/submap [:id])))] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
;; output cleared

time-align-mobile.subs> (select [:buckets sp/ALL (sp/collect-one sp/LAST (sp/submap [:id]))] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{:id 1} [1 {:id 1, :periods {2 {:id 2}}}]]]
time-align-mobile.subs> (select [:buckets sp/ALL (sp/collect-one sp/LAST (sp/submap [:id]))] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{:id 1} [1 {:id 1, :periods {2 {:id 2}}}]]]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id :color :label]))
                :periods sp/ALL] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[]time-align-mobile.subs> 
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id]))
                :periods sp/ALL] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id]))
] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{:id 1} [1 {:id 1, :periods {2 {:id 2}}}]]]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id])) sp/LAST
                :periods sp/ALL] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{:id 1} [2 {:id 2}]]]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id]))
                :periods sp/ALL sp/LAST] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id])) sp/LAST
                :periods sp/ALL sp/LAST] {:buckets {1 {:id 1 :periods {2 {:id 2}}}}})
[[{:id 1} {:id 2}]]
time-align-mobile.subs> (select [:buckets sp/ALL
                (sp/collect-one sp/LAST (sp/submap [:id])) sp/LAST
                :periods sp/ALL sp/LAST] {:buckets {1 {:id 1 :periods {2 {:id 2}}} 3 {:id 3 :periods {4 {:id 4}}}}})
[[{:id 1} {:id 2}] [{:id 3} {:id 4}]][:app] Compiling ...
[:app] Build completed. (189 files, 2 compiled, 0 warnings, 0.71s)

time-align-mobile.subs> 
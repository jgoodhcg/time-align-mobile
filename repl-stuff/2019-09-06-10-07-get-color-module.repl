;; Connected to nREPL server - nrepl://localhost:8202
;; CIDER 0.22.1snapshot (package: 20190903.1609), nREPL 0.6.0
;; Clojure 1.10.1, Java 1.8.0_212
;;     Docs: (doc function-name)
;;           (find-doc part-of-name)
;;   Source: (source function-name)
;;  Javadoc: (javadoc java-object-or-class)
;;     Exit: <C-c C-q>
;;  Results: Stored in vars *1, *2, *3, an exception in *e;
;; ======================================================================
;; If you’re new to CIDER it is highly recommended to go through its
;; manual first. Type <M-x cider-view-manual> to view it.
;; In case you’re seeing any warnings you should consult the manual’s
;; "Troubleshooting" section.
;;
;; Here are few tips to get you started:
;;
;; * Press <C-h m> to see a list of the keybindings available (this
;;   will work in every Emacs buffer)
;; * Press <, ,> to quickly invoke some REPL command
;; * Press <, s s> to switch between the REPL and a Clojure file
;; * Press <M-x cider-find-var> to jump to the source of something (e.g. a var, a
;;   Java method)
;; * Press <, h h> to view the documentation for something (e.g.
;;   a var, a Java method)
;; * Enable ‘eldoc-mode’ to display function & method signatures in the minibuffer.
;; * Print CIDER’s refcard and keep it close to your keyboard.
;;
;; CIDER is super customizable - try <M-x customize-group cider> to
;; get a feel for this. If you’re thirsty for knowledge you should try
;; <M-x cider-drink-a-sip>.
;;
;; If you think you’ve encountered a bug (or have some suggestions for
;; improvements) use <M-x cider-report-bug> to report it.
;;
;; Above all else - don’t panic! In case of an emergency - procure
;; some (hard) cider and enjoy it responsibly!
;;
;; You can remove this message with the <M-x cider-repl-clear-help-banner> command.
;; You can disable it from appearing on start by setting
;; ‘cider-repl-display-help-banner’ to nil.
;; ======================================================================
[:app] Configuring build.
WARNING: No Clojure project was detected. The
refactor-nrepl middleware was not enabled. (You can mute this
warning by customizing `cljr-suppress-no-project-warning'.)[:app] Compiling ...
[:app] Build completed. (190 files, 3 compiled, 0 warnings, 5.00s)
To quit, type: :cljs/quit
[:selected :app]
shadow.user> 
cljs.user> (+ 1 1)
2
cljs.user> (ns time-align-mobile.js-imports
             (:require
              ["react-native" :as react-native]
              ["expo" :as e]
              ["@expo/vector-icons" :as expo-icons]
              ["react-native-color-picker" :as react-native-color-picker]
              ["react-native-elements" :as react-native-elements]
              ["react-native-paper" :as paper]
              ["react-native-modal-datetime-picker" :as react-native-date-picker]
              ["moment-timezone" :as moment-timezone]
              ["react-native-keyboard-aware-scroll-view" :as kasv]
              ["expo-secure-store" :as SecureStore]
              ["expo-document-picker" :as DocumentPicker]
              ["expo-file-system" :as fs
               :refer []]
              ;; ["expo-doucument-picker" :as dp] ;; TODO in sdk-33
              ["expo-constants" :as expo-constants]
              ["color" :as color]
              ["react-native-gesture-handler"
               :refer [PanGestureHandler
                       PinchGestureHandler
                       TapGestureHandler
                       ScrollView
                       LongPressGestureHandler
                       DrawerLayout
                       RectButton
                       State]]
              [oops.core :refer [oget oset! ocall oapply ocall! oapply!
                                 oget+ oset!+ ocall+ oapply+ ocall!+ oapply!+]]
              [reagent.core :as r :refer [atom]]))
niltime-align-mobile.js-importstime-align-mobile.js-imports
time-align-mobile.js-imports> (identity color)
#object[Color]
time-align-mobile.js-imports> (.-Color color)
nil
time-align-mobile.js-imports> (.isLight color)
;; output cleared

time-align-mobile.js-imports> (color "#123123")
#js {:model "rgb", :color #js [18 49 35], :valpha 1, :toString #object[toString], :toJSON #object[toJSON], :string #object[string], :percentString #object[percentString], :array #object[array], :object #object[object], :unitArray #object[unitArray], :unitObject #object[unitObject], :round #object[round], :alpha #object[alpha], :red #object[Function], :green #object[Function], :blue #object[Function], :hue #object[Function], :saturationl #object[Function], :lightness #object[Function], :saturationv #object[Function], :value #object[Function], :chroma #object[Function], :gray #object[Function], :white #object[Function], :wblack #object[Function], :cyan #object[Function], :magenta #object[Function], :yellow #object[Function], :black #object[Function], :x #object[Function], :y #object[Function], :z #object[Function], :l #object[Function], :a #object[Function], :b #object[Function], :keyword #object[keyword], :hex #object[hex], :rgbNumber #object[rgbNumber], :luminosity #object[luminosity], :contrast #object[contrast], :level #object[level], :isDark #object[isDark], :isLight #object[isLight], :negate #object[negate], :lighten #object[lighten], :darken #object[darken], :saturate #object[saturate], :desaturate #object[desaturate], :whiten #object[whiten], :blacken #object[blacken], :grayscale #object[grayscale], :fade #object[fade], :opaquer #object[opaquer], :rotate #object[rotate], :mix #object[mix], :rgb #object[Function], :hsl #object[Function], :hsv #object[Function], :hwb #object[Function], :cmyk #object[Function], :xyz #object[Function], :lab #object[Function], :lch #object[Function], :ansi16 #object[Function], :ansi256 #object[Function], :hcg #object[Function], :apple #object[Function]}
time-align-mobile.js-imports> (-> (color "#123123") (.isLight))
false
time-align-mobile.js-imports> (-> (color "#ffffff") (.isLight))
true[:app] Compiling ...
[:app] Build completed. (190 files, 29 compiled, 0 warnings, 2.32s)

time-align-mobile.js-imports> 